openapi: 3.0.3
info:
  title: Knowledge graph apis - OpenAPI 3.0
  description: |-
    This is a knowledge base server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
tags:
  - name: section
    description: Access to the sections managed by an institution
  - name: content
    description: Manage content entities within the system
  - name: relations
    description: Manage relationships between sections and content

paths:
  /sections:
    post:
      tags:
        - section
      summary: Create a section managed by an institution
      description: Create a section managed by an institution
      operationId: postSections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSectionRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSectionResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    get:
      tags:
        - section
      summary: Gets the sections under the given sourceId
      description: Gets the sections under the given sourceId
      operationId: getSections
      parameters:
        - name: sourceSectionIds
          in: query
          description: A list of source IDs from which the sections should be fetched
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: recursive
          in: query
          description: A flag to mention if the sections should be fetched recursively
          required: true
          schema:
            type: boolean
          style: form
          explode: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSectionsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    delete:
      tags:
        - section
      summary: Deletes the sections under the given sourceIds
      description: Deletes the sections under the given sourceIds
      operationId: deleteSections
      parameters:
        - name: sourceSectionIds
          in: query
          description: A list of source IDs from which the sections should be deleted
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: recursive
          in: query
          description: A flag to mention if the sections should be deleted recursively
          required: true
          schema:
            type: boolean
          style: form
          explode: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSectionsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    put:
      tags:
        - section
      summary: Update a section managed by an institution
      description: Update an existing section
      operationId: putSections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSectionRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSectionResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input

  /contents:
    post:
      tags:
        - content
      summary: Create content within the system
      description: Create a content entity
      operationId: postContents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContentRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContentResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    get:
      tags:
        - content
      summary: Retrieve content by ID
      description: Retrieve specific content details
      operationId: getContents
      parameters:
        - name: contentIds
          in: query
          description: A list of content IDs to retrieve
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContentsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    put:
      tags:
        - content
      summary: Update content details
      description: Update an existing content entity
      operationId: putContents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContentRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContentResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    delete:
      tags:
        - content
      summary: Delete content entities
      description: Delete specific content entries by IDs
      operationId: deleteContents
      parameters:
        - name: contentIds
          in: query
          description: A list of content IDs to delete
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContentsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input

  /relations:
    post:
      tags:
        - relations
      summary: Create relationships between sections or content
      description: Define relationships within or across sections and content entities
      operationId: postRelations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRelationsRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRelationsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    get:
      tags:
        - relations
      summary: Retrieve relationships
      description: Retrieve relationships between sections and content entities
      operationId: getRelations
      parameters:
        - name: source
          in: query
          description: Source entity ID
          required: true
          schema:
            type: string
        - name: target
          in: query
          description: Target entity ID
          required: false
          schema:
            type: string
        - name: relationship
          in: query
          description: Type of relationship
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    delete:
      tags:
        - relations
      summary: Delete relationships
      description: Delete relationships between sections and content entities
      operationId: deleteRelations
      parameters:
        - name: source
          in: query
          description: Source entity ID
          required: true
          schema:
            type: string
        - name: target
          in: query
          description: Target entity ID
          required: false
          schema:
            type: string
        - name: relationship
          in: query
          description: Type of relationship
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRelationsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input

components:
  schemas:
    DeleteSectionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DeleteSectionsResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    DeleteSectionsResponseData:
      type: object
      properties:
        sourceSectionId:
         type: string
         description: The section ID can also be a container ID
        sections:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    GetSectionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetSectionsResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    CreateSectionResponseData:
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
        sourceSectionIds:
          type: array
          items:
            type: string
          description: The section ID can also be a container ID
        sections:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    CreateSectionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateSectionResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    GetSectionsResponseData:
      type: object
      properties:
        sourceSectionId:
         type: string
         description: The section ID can also be a container ID
        sections:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    CreateSectionRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateSectionRequestData'
    CreateSectionRequestData:
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
        sourceSectionIds:
          type: array
          items:
            type: string
          description: The section ID can also be a container ID
        sectionsToAdd:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    UpdateSectionRequest:
      type: object
      properties:
        sectionId:
          type: string
        updates:
          type: object
          additionalProperties: true
    UpdateSectionResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
    CreateContentRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IdAndData'
    CreateContentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IdAndData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    GetContentsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    UpdateContentRequest:
      type: object
      properties:
        contentId:
          type: string
        updates:
          type: object
          additionalProperties: true
    UpdateContentResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
    DeleteContentsResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    CreateRelationsRequest:
      type: object
      properties:
        source:
          type: string
          description: The ID of the source entity (section or content).
          example: "section123"
        target:
          type: string
          description: The ID of the target entity (section or content).
          example: "content456"
        relationshipType:
          type: string
          description: The type of relationship to create.
          example: "contains"
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Optional metadata for the relationship.
      required:
        - source
        - target
        - relationshipType

    CreateRelationsResponse:
      type: object
      properties:
        relationshipId:
          type: string
          description: The ID of the created relationship.
          example: "relation789"
        message:
          $ref: '#/components/schemas/Message'

    GetRelationsResponse:
      type: object
      properties:
        relationships:
          type: array
          items:
            type: object
            properties:
              source:
                type: string
                description: The ID of the source entity.
              target:
                type: string
                description: The ID of the target entity.
              relationshipType:
                type: string
                description: The type of relationship.
              metadata:
                type: object
                additionalProperties:
                  type: string
                description: Optional metadata for the relationship.
        message:
          $ref: '#/components/schemas/Message'

    DeleteRelationsResponse:
      type: object
      properties:
        deletedRelationships:
          type: array
          items:
            type: string
            description: The IDs of the deleted relationships.
          example: ["relation789"]
        message:
          $ref: '#/components/schemas/Message'


    IdAndData:
      type: object
      properties:
        id:
          type: string
        data:
          type: string
    ErrorsAndWarnings:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        code: 
          type: string
          example: '001'
        message:
          type: string
          example: invalid id
    
