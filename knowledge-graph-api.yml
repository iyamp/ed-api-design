openapi: 3.0.3
info:
  title: Knowledge graph apis - OpenAPI 3.0
  description: |-
    This is a knowledge base server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
tags:
  - name: level
    description: Access to levels managed by an institution
  - name: book
    description: Access to the books managed by an institution

paths:
  /sections:
    post:
      tags:
        - book
      summary: Create a section in a book managed by an institution
      description: Create a section in a book managed by an institution
      operationId: postBookSections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookSectionRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBookSectionResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    get:
      tags:
        - book
      summary: Gets the sections that comes under the sourceId
      description: Gets the sections that comes under the sourceId
      operationId: getBookSections
      parameters:
        - name: sourceSectionIds
          in: query
          description: A list of source IDs from which the section should be fetched
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: recursive
          in: query
          description: A flag to mention if the sections should be fetched recursively
          required: true
          schema:
            type: boolean
          style: form
          explode: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBookSectionsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    delete:
      tags:
        - book
      summary: Deletes the sections that comes under the given sourceIds
      description: Deletes the sections that comes under the given sourceIds
      operationId: deleteBookSections
      parameters:
        - name: sourceSectionIds
          in: query
          description: A list of source IDs from which the section should be fetched
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        - name: recursive
          in: query
          description: A flag to mention if the sections should be fetched recursively
          required: true
          schema:
            type: boolean
          style: form
          explode: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBookSectionsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input   
  /levels:
    post:
      tags:
        - level
      summary: Create a new class, year, standard or any other level like JEE etc...
      description: Create a new class, year, standard or any other level like JEE etc...
      operationId: createKnowledgeLevel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostKnowledgeLevelRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostKnowledgeLevelResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    get:
      tags:
        - level
      summary: Returns all the levels under the given board
      description: Returns all the levels under the given board
      operationId: getLevels
      parameters:
        - name: boardId
          in: query
          description: A list of board IDs from which the levels should be fetched
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKnowledgeLevelsResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
          description: Invalid input
    
  /levels/{levelId}:
    delete:
      tags:
        - level
      summary: Delete level by ID
      description: Delete level by ID
      operationId: deleteLevel
      parameters:
        - name: levelId
          in: path
          description: ID of the level that needs to be deleted
          required: true
          schema:
            type: string
            
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeLevelResponse'
        '400':
          description: Invalid ID supplied
  /levels/{sourceBoardId}/{levelId}:
    delete:
      tags:
        - level
      summary: Delete level by ID
      description: Delete level by ID
      operationId: deleteLevelByBoard
      parameters:
        - name: levelId
          in: path
          description: ID of the level that needs to be deleted
          required: true
          schema:
            type: string
            
        - name: sourceBoardId
          in: path
          description: ID of the level that needs to be deleted
          required: true
          schema:
            type: string
            
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsAndWarnings'
        '400':
          description: Invalid ID supplied
components:
  schemas:
    DeleteBookSectionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DeleteBookSectionsResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    DeleteBookSectionsResponseData:
      type: object
      properties:
        sourceSectionId:
         type: string
         description: The section id can also be a book id
        sections:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    GetBookSectionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetBookSectionsResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    CreateBookSectionResponseData:
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
        sourceSectionIds:
          type: array
          items:
            type: string
          description: The section id can also be a book id
        sections:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    CreateBookSectionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateBookSectionResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'  
    GetBookSectionsResponseData:
      type: object
      properties:
        sourceSectionId:
         type: string
         description: The section id can also be a book id
        sections:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    CreateBookSectionRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateBookSectionRequestData'
    CreateBookSectionRequestData:
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
        sourceSectionIds:
          type: array
          items:
            type: string
          description: The section id can also be a book id
        sectionsToAdd:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
        
    DeleteKnowledgeLevelResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DeleteKnowledgeLevelResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings' 
    DeleteKnowledgeLevelResponseData:
      properties:
        impactedBoards:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
        levelsDeleted:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    GetKnowledgeLevelsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetKnowledgeLevelsResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    GetKnowledgeLevelsResponseData:
      type: object
      properties:
        sourceBoardId:
          type: string
        levels:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    PostKnowledgeLevelRequestData:
      type: object
      properties:
        sourceBoardId:
          type: string
        levels:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    PostKnowledgeLevelResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PostKnowledgeLevelResponseData'
      allOf:
        - $ref: '#/components/schemas/ErrorsAndWarnings'
    PostKnowledgeLevelResponseData:
      type: object
      properties:
        sourceBoardId:
          type: string
        levels:
          type: array
          items:
            $ref: '#/components/schemas/IdAndData'
    IdAndData:
      type: object
      properties:
        id:
          type: string
        data:
          type: string
    PostKnowledgeLevelRequest:
      properties:
        data:
          $ref: '#/components/schemas/PostKnowledgeLevelRequestData'
              
    ErrorsAndWarnings:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/Message' 
    Message:
      type: object
      properties:
        code: 
          type: string
          example: '001'
        message:
          type: string
          example: invalid id
